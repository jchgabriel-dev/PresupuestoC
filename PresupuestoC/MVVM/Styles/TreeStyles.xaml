<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   
                    xmlns:tree="clr-namespace:PresupuestoC.MVVM.Converters">

    <Style x:Key="treeFolder" TargetType="{x:Type TreeView}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <tree:ConverterLineTree x:Key="converterLineTree"/>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid  SnapsToDevicePixels="True">
                        <Rectangle Width="11" Height="11" Fill="#ffffff"/>
                        <Viewbox Width="11">
                            <Path x:Name="icon" Fill="#585858" Data="{DynamicResource expand}"/>
                        </Viewbox>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="icon" Property="Data" Value="{DynamicResource collapse}"/>
                            <Setter TargetName="icon" Property="Fill" Value="#818181"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="itemFolder" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="#aaaaaa"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Name="ItemRoot" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid Name="Lines" Grid.Column="0" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Row="0" Grid.Column="1" BorderThickness="1 0 0 1" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Border Grid.Row="1" Grid.Column="1" BorderThickness="1 0 0 0" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" Name="LineToNextItem"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, 
                                             Converter={StaticResource converterLineTree}}"/>
                        </Grid>

                        <ToggleButton x:Name="Expander" Grid.Column="0" Grid.Row="0"
                                  Style="{StaticResource ExpandCollapseToggleStyle}" 
                                  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                  ClickMode="Press"/>

                        <Border Name="Bd" Grid.Column="1" Grid.Row="0"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True">

                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Left" MinWidth="50" />

                                                    
                        
                        </Border>

                        <Grid Grid.Column="0" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="1" BorderThickness="1 0 0 0" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}"
                                Visibility="{Binding ElementName=LineToNextItem, Path=Visibility}"/>
                        </Grid>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                    </Grid>
                    

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>